specVersion: 0.0.2
description: dTrade Rinkeby API
repository: https://github.com/dtradeorg/dtrade-subgraph
schema:
  file: ./dTrade.graphql
dataSources:
  - kind: ethereum/contract
    name: dTrade
    network: rinkeby
    source:
      address: '0x0DcD1Ee16084Eaf11dB15B9FEBdfF9C1E9d767f0' # new ProxyDtrade (ERC20)
      abi: dTrade
      startBlock: 7636959 # creation of this proxy
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ../src/dtrade-mapping.ts
      entities:
        - Transfer
      abis:
        - name: dTrade
          file: ../abis/dTrade.json
        - name: AddressResolver
          file: ../abis/AddressResolver.json
        - name: dTradeState
          file: ../abis/dTradeState.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransferDET

  # Handle Proxy target updated events on upcoming integration Proxy
  - kind: ethereum/contract
    name: ProxydTradeERC20
    network: rinkeby
    source:
      address: '0x0DcD1Ee16084Eaf11dB15B9FEBdfF9C1E9d767f0' # new ProxyDtrade (ERC20)
      abi: Proxy # Requires Proxy ABI to get the TargetUpdated event
      startBlock: 7636959 # creation of this proxy
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ../src/dtrade-mapping.ts
      entities:
        - ProxyTargetUpdated
      abis:
        - name: Proxy
          file: ../abis/Proxy.json
      eventHandlers:
        - event: TargetUpdated(address)
          handler: handleProxyTargetUpdated

  # Handle Transfer on upcoming ProxysUSD Integration proxy
  - kind: ethereum/contract
    name: SynthsUSD
    network: rinkeby
    source:
      address: '0x6C806F05d7CF6f522AC10E7d9916D0E60250B272' # ProxyERC20dUSD (new ERC20 Proxy)
      abi: Synth
      startBlock: 7636980 # creation of this proxy
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ../src/dtrade-mapping.ts
      entities:
        - Transfer
        - Issued
        - Burned
      abis:
        - name: Synth
          file: ../abis/Synth.json
        - name: dTrade
          file: ../abis/dTrade.json
        - name: AddressResolver
          file: ../abis/AddressResolver.json
        - name: dTradeState
          file: ../abis/dTradeState.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransferSynth
        - event: Issued(indexed address,uint256)
          handler: handleIssuedSynths
        - event: Burned(indexed address,uint256)
          handler: handleBurnedSynths

  # Handle Transfer, Issued, Burned on current ProxysETH
  - kind: ethereum/contract
    name: SynthsETH
    network: rinkeby
    source:
      address: '0x46267fC6D1DF6Bf0349bB8c388024B9D1776287C' # ProxysETH (new ERC20 Proxy)
      abi: Synth
      startBlock: 7637036
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ../src/dtrade-mapping.ts
      entities:
        - Transfer
        - Issued
        - Burned
      abis:
        - name: Synth
          file: ../abis/Synth.json
        - name: dTrade
          file: ../abis/dTrade.json
        - name: AddressResolver
          file: ../abis/AddressResolver.json
        - name: dTradeState
          file: ../abis/dTradeState.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransferSynth
        - event: Issued(indexed address,uint256)
          handler: handleIssuedSynths
        - event: Burned(indexed address,uint256)
          handler: handleBurnedSynths

  # add definitions here for more synths (iBTC, iETH etc)

  # Handle RewardEscrow Transfers (determine who has collected fees)
  - kind: ethereum/contract
    name: RewardEscrow
    network: rinkeby
    source:
      address: '0x33D20eBf540383DEb8Cf4A14bd5226baBE695ae5' # RewardEscrow
      abi: RewardEscrow
      startBlock: 7636940
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ../src/dtrade-mapping.ts
      entities:
        - RewardEscrowHolder
        - DETHolder
      abis:
        - name: RewardEscrow
          file: ../abis/RewardEscrow.json
        - name: dTrade
          file: ../abis/dTrade.json
        - name: AddressResolver
          file: ../abis/AddressResolver.json
        - name: dTradeState
          file: ../abis/dTradeState.json
      eventHandlers:
        - event: VestingEntryCreated(indexed address,uint256,uint256)
          handler: handleRewardVestEvent
        - event: Vested(indexed address,uint256,uint256)
          handler: handleRewardVestEvent

  # Handle FeePool FeesClaimed
  - kind: ethereum/contract
    name: FeePool
    network: rinkeby
    source:
      address: '0x249dbf0982c9D5313E1275D0741992DED11Fc001' # ProxyFeePool
      abi: FeePool
      startBlock: 7636943
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ../src/dtrade-mapping.ts
      entities:
        - FeesClaimed
        - DETHolder
      abis:
        - name: FeePool
          file: ../abis/FeePool.json
      eventHandlers:
        - event: FeesClaimed(address,uint256,uint256)
          handler: handleFeesClaimed
