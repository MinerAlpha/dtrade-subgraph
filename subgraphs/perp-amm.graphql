type PositionAdjusted @entity {
  id: ID!
  trader: Bytes! # address
  amm: Bytes! # address
  newPositionSize: BigInt!
  oldLiquidityIndex: BigInt!
  newLiquidityIndex: BigInt!
  timestamp: BigInt
}

type PositionSettled @entity {
  id: ID!
  trader: Bytes! # address
  amm: Bytes! # address
  valueTransferred: BigInt!
  timestamp: BigInt
}

type PositionChanged @entity {
  id: ID!
  trader: Bytes! # address
  amm: Bytes! # address
  margin: BigDecimal!
  positionNotional: BigDecimal!
  exchangedPositionSize: BigDecimal!
  fee: BigDecimal!
  positionSizeAfter: BigDecimal!
  realizedPnl: BigDecimal!
  unrealizedPnlAfter: BigDecimal!
  badDebt: BigDecimal!
  liquidationPenalty: BigDecimal!
  spotPrice: BigDecimal!
  fundingPayment: BigDecimal!
  timestamp: BigInt
}

type PositionLiquidated @entity {
  id: ID!
  trader: Bytes! # address
  amm: Bytes! # address
  positionNotional: BigInt!
  positionSize: BigInt!
  liquidationFee: BigInt!
  liquidator: Bytes! # address
  timestamp: BigInt
}

type AveragePosition @entity {
  id: ID! # tradeAddr + ammAddr
  avgEntryPrice: BigDecimal!
  avgLeverage: BigDecimal!
  totalMargin: BigDecimal!
  size: BigDecimal!
}
